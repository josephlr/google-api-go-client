{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "confidentialcomputing:v1alpha1",
  "name": "confidentialcomputing",
  "canonicalName": "Confidential Computing",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Confidential Computing API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/confidential-computing",
  "protocol": "rest",
  "rootUrl": "https://confidentialcomputing.googleapis.com/",
  "mtlsRootUrl": "https://confidentialcomputing.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://confidentialcomputing.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "Challenge": {
      "id": "Challenge",
      "description": "A Challenge from the server used to guarantee freshness of attestations",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name for this Challenge in the format `projects\/*\/locations\/*\/challenges\/*`",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which this Challenge was created",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "expireTime": {
          "description": "Output only. The time at which this Challenge will no longer be usable. It is also the expiration time for any tokens generated from this Challenge.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "used": {
          "description": "Output only. Indicates if this challenge has been used to generate a token.",
          "readOnly": true,
          "type": "boolean"
        },
        "nonce": {
          "description": "Output only. Random data which should be used when calling TPM2_Quote.",
          "readOnly": true,
          "type": "string",
          "format": "byte"
        }
      }
    },
    "VerifyAttestationRequest": {
      "id": "VerifyAttestationRequest",
      "description": "A request for an OIDC token, providing all the necessary information needed for this service to verify the plaform state of the requestor.",
      "type": "object",
      "properties": {
        "gcpCredentials": {
          "description": "Optional. Credentials used to populate the \"emails\" claim in the claims_token.",
          "$ref": "GcpCredentials"
        },
        "tpmAttestation": {
          "description": "Required. The TPM-specific data provided by the attesting platform, used to populate any of the claims regarding platform state.",
          "$ref": "TpmAttestation"
        }
      }
    },
    "GcpCredentials": {
      "id": "GcpCredentials",
      "description": "Credentials issued by GCP which are linked to the platform attestation. These will be verified server-side as part of attestaion verification.",
      "type": "object",
      "properties": {
        "idTokens": {
          "description": "A list of service account OpenID Connect ID tokens identifying which service account identities should be included in the claims_token. These can be generated by calling `serviceAccounts.generateIdToken`. The Challenge.name must be used as the `audience` parameter, and the `includeEmail` parameter must be `true`.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "TpmAttestation": {
      "id": "TpmAttestation",
      "description": "TPM2 data containing everything necessary to validate any platform state measured into the TPM.",
      "type": "object",
      "properties": {
        "quotes": {
          "description": "TPM2 PCR Quotes generated by calling TPM2_Quote on each PCR bank.",
          "type": "array",
          "items": {
            "$ref": "Quote"
          }
        },
        "tcgEventLog": {
          "description": "The binary TCG Event Log containing events measured into the TPM by the platform firmware and operating system. Formatted as described in the \"TCG PC Client Platform Firmware Profile Specification\".",
          "type": "string",
          "format": "byte"
        },
        "canonicalEventLog": {
          "description": "An Event Log containing additional events measured into the TPM that are not already present in the tcg_event_log. Formatted as described in the \"Canonical Event Log Format\" TCG Specification.",
          "type": "string",
          "format": "byte"
        },
        "akCert": {
          "description": "DER-encoded X.509 certificate of the Attestation Key (otherwise known as an AK or a TPM restricted signing key) used to generate the quotes.",
          "type": "string",
          "format": "byte"
        },
        "certChain": {
          "description": "List of DER-encoded X.509 certificates which, together with the ak_cert, chain back to a trusted Root Certificate.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "Quote": {
      "id": "Quote",
      "description": "Information about Platform Control Registers (PCRs) including a signature over their values, which can be used for remote validation.",
      "type": "object",
      "properties": {
        "hashAlgo": {
          "description": "The hash algorithm of the PCR bank being quoted, encoded as a TPM_ALG_ID",
          "type": "integer",
          "format": "int32"
        },
        "pcrValues": {
          "description": "Raw binary values of each PCRs being quoted.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          }
        },
        "rawQuote": {
          "description": "TPM2 quote, encoded as a TPMS_ATTEST",
          "type": "string",
          "format": "byte"
        },
        "rawSignature": {
          "description": "TPM2 signature, encoded as a TPMT_SIGNATURE",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "VerifyAttestationResponse": {
      "id": "VerifyAttestationResponse",
      "description": "A response once an attestation has been successfully verified, containing a signed OIDC token.",
      "type": "object",
      "properties": {
        "claimsToken": {
          "description": "Output only. The OIDC token issued by this service. It contains specific platform claims based on the contents of the provided attestation.",
          "readOnly": true,
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "confidentialcomputing.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "confidentialcomputing.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "challenges": {
              "methods": {
                "create": {
                  "id": "confidentialcomputing.projects.locations.challenges.create",
                  "path": "v1alpha1/{+parent}/challenges",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/challenges",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the location where the Challenge will be used, in the format `projects\/*\/locations\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Challenge"
                  },
                  "response": {
                    "$ref": "Challenge"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Challenge in a given project and location."
                },
                "verifyAttestation": {
                  "id": "confidentialcomputing.projects.locations.challenges.verifyAttestation",
                  "path": "v1alpha1/{+challenge}:verifyAttestation",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/challenges/{challengesId}:verifyAttestation",
                  "httpMethod": "POST",
                  "parameters": {
                    "challenge": {
                      "description": "Required. The name of the Challenge whose nonce was used to generate the attestation, in the format `projects\/*\/locations\/*\/challenges\/*`. The provided Challenge will be consumed, and cannot be used again.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/challenges\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "challenge"
                  ],
                  "request": {
                    "$ref": "VerifyAttestationRequest"
                  },
                  "response": {
                    "$ref": "VerifyAttestationResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Verifies the provided attestation info, returning a signed OIDC token."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}